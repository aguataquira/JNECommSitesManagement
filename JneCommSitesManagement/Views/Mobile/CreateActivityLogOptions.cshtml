@model JneCommSitesManagement.Models.ActivityLogsOptions

@{
    ViewBag.Title = "CreateActivityLogOptions";
    Layout = "~/Views/Shared/_LayoutCrewJneCommSites.cshtml";
}

<h3 class="text-info"> Select a Activity - Seleccione una Actividad</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        <div class="row">
            <div class="col-md-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.activityLogOption, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.activityLogOption, new SelectList(Model._ActivityLogoption, "ID", "Description"), "--Select a Option--", new { ng_model = "ddlOption", ng_change = "changedValue(ddlOption)", style = "width: 300px; height: 30px;" })
                        @Html.ValidationMessageFor(model => model.activityLogOption, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class=" col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.checkPoint, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.checkPoint, new { htmlAttributes = new { ng_model = "checkPoint", @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.checkPoint, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            @if (string.IsNullOrEmpty(Model.site))
            { 
            <div class="col-md-6" ng-hide="dvSitesHidden">
                <div class="form-group">
                    @Html.LabelFor(model => model.site, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.site, new SelectList(Model._SitesList, "ID", "Description"), "--Select a Option--", new { ng_model = "ddlSite", style = "width: 300px; height: 30px;" })
                        @Html.ValidationMessageFor(model => model.site, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            }
            else
            {
                <div class="col-md-6" >
                    <div class="form-group">
                        @Html.LabelFor(model => model.site, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.site, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.site, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="form-group">
            <div class="col-md-offset-0 col-md-12">
                <input type="submit" value="Go / Save" class="btn btn-primary" />
            </div>
        </div>

        

        <table class="table-striped" style="min-width:100%">
            <tr>
                <th>Start Working Day</th>
                <th>Arriving Warehouse</th>
                <th>Departure Warehouse</th>
                <th>End Working Day</th>
                <th>Site</th>
            </tr>
            <tr>
               
            </tr><tr ng-repeat="item in ActivityCheckPoints">
                <td>
                    {{item.StartWorkingDay}}
                </td>
                <td>
                    {{item.ArrivingWareHouse}}
                </td>
                <td>
                    {{item.DepartureWareHouse}}
                </td>
                <td>
                    {{item.EndWorkingDay}}
                </td>
                <td>
                    {{item.Site}}
                </td>
            </tr>
        </table>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/angular.js")
    @Scripts.Render("~/Scripts/Json.js")
    <script src="~/Scripts/jquery-ui.js"></script>
    <link href="~/Content/images/jquery-ui.css" rel="stylesheet" />
    <link href="~/Content/images/theme.css" rel="stylesheet" />



<script>


    window.setInterval(updateCheckPoint, 10000);

    function updateCheckPoint() {
        var test = new Date();
        $("#checkPoint").val(test.toISOString().substring(0, 19).replace("T", " "));
    }


        var batch = new Array();

       

            var helloApp = angular.module("JeCommAPP", []);
            helloApp.controller("JeCommController", function ($scope, $http) {
                $scope.dvSitesHidden = true;
                $scope.ActivityCheckPoints = [];

                $scope.changedValue = function (item) {
                    
                    
                        var test = new Date();
                        $scope.checkPoint = test.toISOString().substring(0, 19).replace("T", " ");
                    
                    switch(item)
                    {
                        case "DepartureWareHouse":
                            $scope.dvSitesHidden = false;
                            break;
                        case "Shopping":
                            $scope.dvSitesHidden = false;
                            break;
                        case "Fuel":
                            $scope.dvSitesHidden = false;
                            break;
                        case "Hotel":
                            $scope.dvSitesHidden = false;
                            break;
                        default:
                            $scope.dvSitesHidden = true;
                            break;
                    }
                }

                $http({
                    method: 'GET',
                    url: '@Url.Action("GetActivityLogsByUser")',
                }).then(function successCallback(response) {
                    $scope.ActivityCheckPoints = response.data;
                },
                    function errorCallback(response) {
                });


            });

    </script>

}