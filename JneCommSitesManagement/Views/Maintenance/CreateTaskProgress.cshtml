@model JneCommSitesManagement.Models.TaskProgress
@using JneCommSitesManagement.Helper

@{
    ViewBag.Title = "Create Task Progress";
}

@{
    var queryCrewRol = Helper.GetCrewRoleByUser(User.Identity.Name);
    if (queryCrewRol != null)
    {
        Layout = "~/Views/Shared/_LayoutCrewJneCommSites.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_LayoutJneCommSites.cshtml";
    }

}

<h3 class="text-info">Create Task Progress</h3>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.taskName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.taskName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.taskName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.taskDescription, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.taskDescription, new { style = "margin: 2px; width: 306px; height: 89px;", htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.taskDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.canUploadFile, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.canUploadFile)
                            @Html.ValidationMessageFor(model => model.canUploadFile, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.isActive)
                            @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-0 col-md-12">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "TaskProgressList")
</div>
